name: Build Android APK

on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js for frontend build
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Build frontend static assets
        run: |
          echo "Building frontend static assets..."
          cd client
          npm install
          npm run build
          cd ..
          echo "Frontend build complete."
          echo "Listing contents of client/dist:"
          ls -Rla client/dist

      - name: Prepare Go embed directory
        run: |
          echo "Preparing directory for Go embed..."
          rm -rf cloud-clip/static
          mkdir -p cloud-clip/static
          cp -r client/dist/* cloud-clip/static/
          echo "Frontend assets copied to cloud-clip/static."
          echo "Listing contents of cloud-clip/static:"
          ls -Rla cloud-clip/static

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get short commit SHA for version
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Go executable for Android
        run: |
          echo "Building Go binary with version: ci-${{ steps.vars.outputs.sha_short }}"
          cd cloud-clip
          
          echo "--- Listing contents of cloud-clip directory before Go build ---"
          pwd
          ls -Rla # 确认 cloud-clip/static 存在且有内容
          echo "-------------------------------------------------------------"
          
          GOOS=android GOARCH=arm64 go build -v -trimpath -tags=embed \
            -ldflags="-s -w -X main.server_version=ci-${{ steps.vars.outputs.sha_short }} -X main.useEmbedded=true" \
            -o cloudclip_android_arm64 .
          
          echo "Go binary compiled."
          ls -l cloudclip_android_arm64

          mkdir -p ../Android/app/src/main/assets/
          mv cloudclip_android_arm64 ../Android/app/src/main/assets/
          echo "Go binary moved to Android assets directory."
          ls -l ../Android/app/src/main/assets/
          cd ..

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./Android/gradlew

      - name: Build Android APK (Debug)
        run: |
          cd Android
          ./gradlew assembleDebug --stacktrace
          cd ..

      - name: List generated APK files
        run: |
          echo "Listing files in Android/app/build/outputs/apk/debug/"
          ls -R Android/app/build/outputs/apk/debug/
          echo "Listing files in Android/app/build/outputs/apk/"
          ls -R Android/app/build/outputs/apk/

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloud-clipboard-debug-apk
          path: Android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error